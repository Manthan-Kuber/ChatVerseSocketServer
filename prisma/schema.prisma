generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Example {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime
  isOp      Boolean  @default(false)
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  Account       Account[]
  Session       Session[]
  Chats         Chats?    @relation(fields: [chatsId], references: [id])
  chatsId       String?
  isAdmin       Boolean   @default(false)
  adminChatsId  Chats[]   @relation("AdminChats")
  Message       Message[]
  sentMessages  Message[] @relation("SentMessages")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Chats {
  id            String  @id
  isGroupChat   Boolean @default(false)
  chatName      String
  users         User[]
  groupAdmin    User    @relation("AdminChats", fields: [groupAdminId], references: [id])
  latestMessage Message @relation(fields: [messageId], references: [id])
  groupAdminId  String  @unique
  messageId     String
  userId        String  @unique
}

model Message {
  id        String   @id
  sender    User     @relation("SentMessages", fields: [userId], references: [id])
  content   String
  createdAt DateTime
  Chats     Chats[]
  readBy    User[]
  userId    String   @unique
}
